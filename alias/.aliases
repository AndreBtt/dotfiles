alias ga='git add'
alias gs='git status'
alias gu='git pull'
alias ts='toggl start'
alias gg='git graph'
alias sr='screen -r'

alias hgrep='history -n 1 | grep'
alias rsub='rmate'

alias ag='rg'

alias fuck='eval $(thefuck $(fc -ln -1)); history -r'
alias matlabc='matlab -nodesktop -nosplash'
alias jc="jupyter console"
alias jco="jupyter nbconvert"
alias jq='jupyter qtconsole --style monokai &'
alias jn="jupyter notebook"
alias jn-b="jupyter notebook --no-browser"
alias tab='open . -a iterm'
alias diff='colordiff'
alias yt="youtube-dl"
alias yta="youtube-dl --extract-audio --audio-format mp3"
alias doc2pdf="soffice --headless --convert-to pdf"
alias ppt2pdf="soffice --headless --convert-to pdf"
alias grepc="grep -P --color=always" #Color grep

alias loco="/usr/local/bin/sl"
alias dc="cd"
alias crontab="VIM_CRONTAB=true crontab"

alias cat='bat'

alias ghostscript="/usr/local/bin/gs"

alias my-ip="curl ipinfo.io/ip 2> /dev/null"
alias tb="nc termbin.com 9999"

# For remote sublime text
if ! command -v subl > /dev/null; then
    alias subl="rmate"
fi


# SECRET ALIASES
if [ -f ~/.secret-aliases ]; then
    source ~/.secret-aliases
fi

# TMP ALIASES (for local stuff)
if [ -f ~/.tmp-aliases ]; then
    source ~/.tmp-aliases
fi


# Functions

# fzf
if command -v fzf > /dev/null; then

  function fzf-history() {
      local tac
      if which tac > /dev/null; then
          tac="tac"
      else
          tac="tail -r"
      fi
      BUFFER=$(\history -n 1 | fzf)
      CURSOR=$#BUFFER
  }
  # zle -N fzf-history
  # bindkey '^r' fzf-history

  fh() {
    print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//')
  }

  # fkill - kill process
  fkill() {
    local pid
    pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

    if [ "x$pid" != "x" ]
    then
      echo $pid | xargs kill -${1:-9}
    fi
  }

  v() {
    local file
    file="$(fasd -Rfl "$1" | fzf -1 -0 --no-sort +m)" && vim "${file}" || return 1
  }

  #less on fuzzy find
  fl() {
    less $(fzf)
  }

fi

# # Comment below if not fzf and fasd
# unalias z
# # fasd & fzf change directory - jump using `fasd` if given argument, filter output of `fasd` using `fzf` else'
# z() {
#   [ $# -gt 0 ] && fasd_cd -d "$*" && return
#   local dir
#   dir="$(fasd -Rdl "$1" | fzf -1 -0 --no-sort +m)" && cd "${dir}" || return 1
# }

# Rename iterm Windows
# $1 = type; 0 - both, 1 - tab, 2 - title
# rest = text
setTerminalText () {
    # echo works in bash & zsh
    local mode=$1 ; shift
    echo -ne "\033]$mode;$@\007"
}
stt_both  () { setTerminalText 0 $@; }
stt_tab   () { setTerminalText 1 $@; }
stt_title () { setTerminalText 2 $@; }

tn () {stt_tab $@ && tmux new -s $@}
ta () {stt_tab $@ && tmux a -t $@}


# OS dependent aliases
case "$(uname -s)" in

   Darwin)
     # echo 'Mac OS X'

     alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome &"
     alias chromec="/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary &"

     alias jackett="mono --debug /Applications/Jackett/JackettConsole.exe"
     alias eject-duralumin="sync-duralumin && diskutil unmount /Volumes/DURALUMIN"
     alias "bu"="brew update && brew outdated | xargs brew upgrade  && brew cleanup -s"

     alias backup-fotos="rclone copy -vc Pictures/Fotos aurora:Fotos "

     alias readlink="greadlink"
     ;;

   Linux)
     # echo 'Linux'
     ;;

   CYGWIN*|MINGW32*|MSYS*)
     # echo 'MS Windows'
     ;;

   # Add here more strings to compare
   # See correspondence table at the bottom of this answer

   *)
     # echo 'other OS'
     ;;
esac


# Global Alias (only zsh)
case $SHELL in
*/zsh)
   # assume Zsh
   ;;
*/bash)
   # assume Bash
   ;;
*)
   # assume something else
esac


