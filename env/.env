# Environment Setup
# Shell Agnostic. Should work both with bash and zsh

export PATH="/usr/local/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"
export PATH="$HOME/bin:$PATH"
export PATH="$PYENV_ROOT/bin:$PATH"

# set PATH so it includes user's .local/bin if it exists
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi

# CLI colors
export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

# Configure Editor
export EDITOR='vim'

# Python from pyenv
export PYENV_ROOT="$HOME/.pyenv"

if command -v pyenv > /dev/null; then
    eval "$(pyenv init -)";
fi
if command -v pyenv-virtualenv-init > /dev/null; then
    eval "$(pyenv virtualenv-init -)";
fi

export PYENV_VIRTUALENV_DISABLE_PROMPT=1

# Add RVM to PATH for scripting
export PATH="$PATH:$HOME/.rvm/bin"

# Fasd init
if command -v fasd > /dev/null; then
    eval "$(fasd --init auto)"
fi

# PERL
if [ -d "$HOME/perl5" ] ; then
    PATH="$HOME/perl5/bin${PATH:+:${PATH}}"; export PATH;
    PERL5LIB="$HOME/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
    PERL_LOCAL_LIB_ROOT="$HOME/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
    PERL_MB_OPT="--install_base \"$HOME/perl5\""; export PERL_MB_OPT;
    PERL_MM_OPT="INSTALL_BASE=$HOME/perl5"; export PERL_MM_OPT;
fi

# Node Version Manager
# if [ -d "$HOME/.nvm" ] ; then
#     export NVM_DIR="$HOME/.nvm"
#     source "/usr/local/opt/nvm/nvm.sh"
# fi

# OS specific

case "$(uname -s)" in

   Darwin)

     # Matlab
     export PATH="/Applications/MATLAB_R2017b.app/bin:$PATH"
     ;;

   Linux)

     ;;

   CYGWIN*|MINGW32*|MSYS*)

     ;;

   # Add here more strings to compare
   # See correspondence table at the bottom of this answer

   *)

     ;;
esac

